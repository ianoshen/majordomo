// Automatically generated by MockGen. DO NOT EDIT!
// Source: broker.go

package majordomo

import (
	gomock "code.dapps.douban.com/gomock/gomock"
)

// Mock of Broker interface
type MockBroker struct {
	ctrl     *gomock.Controller
	recorder *_MockBrokerRecorder
}

// Recorder for MockBroker (not exported)
type _MockBrokerRecorder struct {
	mock *MockBroker
}

func NewMockBroker(ctrl *gomock.Controller) *MockBroker {
	mock := &MockBroker{ctrl: ctrl}
	mock.recorder = &_MockBrokerRecorder{mock}
	return mock
}

func (_m *MockBroker) EXPECT() *_MockBrokerRecorder {
	return _m.recorder
}

func (_m *MockBroker) Close() error {
	ret := _m.ctrl.Call(_m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockBrokerRecorder) Close() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Close")
}

func (_m *MockBroker) Errors() chan error {
	ret := _m.ctrl.Call(_m, "Errors")
	ret0, _ := ret[0].(chan error)
	return ret0
}

func (_mr *_MockBrokerRecorder) Errors() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Errors")
}

func (_m *MockBroker) Run() {
	_m.ctrl.Call(_m, "Run")
}

func (_mr *_MockBrokerRecorder) Run() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Run")
}
